#!/bin/dash

# Check if the girt-init has been done
if ! [ -d "./.girt" ]
then
	echo "girt-commit: error: girt repository directory .girt not found"
	exit 1
fi

# Update filenames in .girt_status
for file in *
do
	grab=$(egrep "^$file$" ./.girt/.git_status)
	if [ "$grab" = "" ]
	then
		echo "$file" >> ./.girt/.git_status
	else
		continue
	fi
done


# check number of arguments 
# if not equals to 3, print error message and exit
if ! [ $# -ge '2' ] 
then
	echo "usage: girt-commit [-a] -m commit-message"
	exit 1
fi

# check the option 
# if not -m, print error message and exit
if ! [ $1 = '-m' ] 
then
	# for the option -a
	if [ $1 = '-a' ]
	then
		ls -1 "./.girt/girt_add" |
		while read -r file
		do
			girt-add "$file"
		done
	else
		echo "usage: girt-commit [-a] -m commit-message"
		exit 1
	fi
fi


# initalize the name of the commit repo
commit_prefix="./.girt/"
commit_repo="girt_commit"
commit_prv_index=0
commit_index=0

# set a flag to see whether the file in girt-add has been made any changes
# 0 means no difference
# None 0 means there is difference
diff_flag=0 

# created the lasted index number for commit repo
new_commit_repo="${commit_prefix}${commit_repo}.$commit_index"
while test -e "$new_commit_repo"
do
	commit_prv_index=$commit_index
	commit_index=$(($commit_index+1))
	new_commit_repo="${commit_prefix}${commit_repo}.$commit_index"
done

prv_commit_repo="${commit_prefix}${commit_repo}.$commit_prv_index"

if test "$commit_index" -eq 0
then

	# if the there is no file in the index,
	# print error message "nothing to commit" and exit
	if ! [ "$(ls -A ./.girt/girt_add)" ]
	then 
		echo "nothing to commit"
		exit 1
	fi
	
	# create the first commit
	# copy files from index to commit
	mkdir "$new_commit_repo"

	ls -1 ./.girt/girt_add |
	while read -r file
	do
		cp "./.girt/girt_add/$file" "$new_commit_repo/$file"
		
	done
	echo "Committed as commit $commit_index"

	# write the commit to the log file
	echo "$commit_index $2" >> ./.girt/.git_log
	exit 0
else
	# count how many files in index and previous commit
	count_files_index=$(cd ./.girt/girt_add; ls -1 | wc -l)
	count_files_prv_commit=$(cd "$prv_commit_repo"; ls -1 | wc -l)

	if [ "$count_files_index" != "$count_files_prv_commit" ] #the number of files in index and previous commit are different
	then
		diff_flag=$(($diff_flag+1)) # then there must be some changes, we should do commit in later stage
	elif [ "$count_files_index" != '0' ] # Edge case: both index and prev commit are empty
	then
		cd ./.girt/girt_add # Enter the index repo
		for file in *
		do
			if [ -e "../../${prv_commit_repo}/$file" ]
			then
				DIFF=$(diff "$file" "../../${prv_commit_repo}/$file") 
				if [ "$DIFF" = "" ] # if the file in index are the same from that in prv-commit, we continue
				then
					continue
				else
					# The file in the index are different, we have to make new commit
					diff_flag=$(($diff_flag+1))
					break
				fi
			else
				# The file is a new file in index which is not exist in prv-commit
				# we set the flag and make commit
				diff_flag=$(($diff_flag+1))
				break
			fi
		done 
		cd ..; cd .. # return to the root repo
	fi

	# diff_flag == 0 means
	# the files in index have no difference between the last commit
	# then, we have nothing to commit
	if test "$diff_flag" -eq 0
	then
		echo "nothing to commit"
		exit 1
	else
		mkdir "$new_commit_repo"
		# copy files from add stage to commit
		ls -1 "./.girt/girt_add" |
		while read -r file
		do
			cp "./.girt/girt_add/$file" "$new_commit_repo/$file"
		done

		echo "Committed as commit $commit_index"
		# write the commit to the log file
		echo "$commit_index $2" >> ./.girt/.git_log
		exit 0
	fi
	
fi

